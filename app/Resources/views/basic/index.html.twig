{% extends 'base.html.twig' %}

{% block title %}Welcome{% endblock %}

{% block body %}
    <div class="row" id="choose-graph">
        <div class="col-md-12">
            Choose graph
        </div>
    </div>
    <div class="row" id="graph-designer">
        <div class="col-md-12" id="buttons">
            <div class="btn-group" role="group" aria-label="Modify Your Graph">
                <div class="btn btn-success" id="Add">Add Point</div>
                <div class="btn btn-danger" id="Remove">Remove Point</div>
            </div>
        </div>
        <div class="col-md-12" id="canvas-area">
            {# canvas area #}
        </div>
    </div>
{% endblock %}

{% block stylesheets %}
<style type="text/css">
    #choose-graph, #graph-designer {
        display: none;
    }
    #graph-designer #buttons {
        margin-bottom: 5px;
    }
    #graph-designer #canvas-area {
        border: 1px solid #000;
        padding: 0;
    }
</style>
{% endblock %}

{% block javascripts %}
    <script type="text/javascript" src="javascript/kinetic-v5.1.0.min.js"></script>

    <script type="text/javascript">
        var _Action = new function () {
            this.current = 'none'
            this.availableActions = new Array('none', 'add', 'remove');
            this.change = function (action) {
                if (this.availableActions.indexOf(action) != -1) {
                    if (action != 'none') {
                        $('body').removeClass(this.current)
                                 .addClass(action);
                    }

                    this.current = action;
                } else {
                    throw 'Action not exists!';
                }
            };
        };
        var _Stage;
        var _Points = new function (points) {
            this.points = new Array();
            this.pointsCount = 0;
            this.getPoint = function(n) {
                if (this.pointsCount == 0) {
                    throw 'Points array is clear!';
                } else {
                    if ((n < this.pointsCount) && (n >= 0)) {
                        return this.points[n];
                    } else {
                        throw 'Point not exists!';
                    }
                }
            }
            this.eachOne = function (func) {
                if (this.pointsCount > 0) {
                    for (var a = 0; a < this.pointsCount; a++) {
                        func(this.points[a]);
                    }
                }
            }
        };
        //var _Labels = new Array();

        function loadGraphsData()
        {
            var baseLayer = new Kinetic.Layer();
            _Stage.add(baseLayer);

            var pointsLayer = new Kinetic.Layer();

            _Points.eachOne(function (point) {
                pointsLayer.add(_Points[a]);
            });

            _Stage.add(pointsLayer)
                  .draw();
        }

        function createCircle()
        {
            
        }

        $(document).ready(function () {
            if ($('#graphs-list .list-group-item.active').length == 0) {
                $('#choose-graph').css('display', 'block');
            } else {
                $('#graph-designer').css('display', 'block');
            }

            _Stage = new Kinetic.Stage({
                container: 'canvas-area',
                height: 100,
                width: 100
            });
            loadGraphsData();

            $('div#buttons div.btn-group div').on('click', function () {
                _Action.change($(this).attr('id'));
            });

            $('div#canvas-area').on('contextmenu', function () {
                _Action.change('none');
                return false;
            });
        });
    </script>
{% endblock %}
